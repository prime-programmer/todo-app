{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTools","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LA4CeA,MA1Cf,SAAkBC,GACd,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAO,IAAlE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAEzBC,qBAAU,WACNF,EAASG,QAAQC,WAGpB,IAAMC,EAAe,SAAAC,GACjBP,EAASO,EAAEC,OAAOV,QAYtB,OACI,sBAAMW,UAAU,YAAYC,SAVX,SAAAH,GACjBA,EAAEI,iBAGNhB,EAAMe,SAAS,CACXE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmBC,KAAKjB,IAEhDC,EAAS,KAGL,SACCL,EAAME,KACH,qCACA,uBAAOoB,KAAK,OAAOC,YAAY,OAAOpB,MAAOC,EAC7CoB,KAAK,OAAOV,UAAU,kBAAkBW,SAAUd,EAAce,IAAKpB,IACrE,wBAAQQ,UAAU,mBAAlB,kBAHA,OAMA,qCACA,uBAAOQ,KAAK,OAAOC,YAAY,WAAWpB,MAAOC,EACjDoB,KAAK,OAAOV,UAAU,aAAaW,SAAUd,EAAce,IAAKpB,IAChE,wBAAQQ,UAAU,cAAlB,iBAHA,U,eCCGa,MA7Bf,YAA+D,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC5C,EAAwB9B,mBAAU,CAC9BgB,GAAG,KAAMd,MAAO,KADpB,mBAAOD,EAAP,KAAa8B,EAAb,KAYA,OAAI9B,EAAKe,GACE,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATZ,SAAAZ,GACjB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACJf,GAAG,KACHd,MAAO,QAQRyB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKrB,UAAWoB,EAAKE,WAAa,oBAAsB,WAAxD,UAEI,sBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,cAA2DiB,EAAKb,OAAtDa,EAAKjB,IACf,sBAAKH,UAAU,QAAf,cAAwB,cAAC,IAAD,CAAmBuB,QAAS,kBAAMP,EAAWI,EAAKjB,KAAKH,UAAU,gBACzF,cAAC,IAAD,CAAQuB,QAAS,kBAAML,EAAQ,CAACf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAAQP,UAAU,cAD3E,SAHqEqB,OCgClEG,MAnDf,WACI,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAuCA,OACI,gCACE,uCACA,cAAC,EAAD,CAAUxB,SAxCA,SAAAmB,GACZ,GAAIA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAAnC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OAkCP,cAAC,EAAD,CACIb,MAAOA,EAAOC,aAhBH,SAAAZ,GACjB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAIzB,OAHIA,EAAKjB,KAAOA,IACZiB,EAAKE,YAAcF,EAAKE,YAErBF,KAGPK,EAASG,IAQmCZ,WAvBjC,SAAAb,GACf,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,IAAMA,KACvDsB,EAASI,IAqB+DZ,WA/BzD,SAACc,EAAQC,GACpBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAG3CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCX5DC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCFNoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6c8280ac.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value: '');\r\n\r\n    const inputRef = useRef(null)\r\n\r\n   useEffect(()=> {\r\n       inputRef.current.focus()\r\n   })\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    \r\n\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000), text:input\r\n    });\r\n    setInput('');\r\n};\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n        {props.edit ? (\r\n            <>\r\n            <input type='text' placeholder='Edit' value={input} \r\n            name='text' className='todo-input edit' onChange={handleChange} ref={inputRef}/>\r\n            <button className='todo-button edit'>Edit</button> </>\r\n        ) : \r\n        (            \r\n            <>\r\n            <input type='text' placeholder='Add task' value={input} \r\n            name='text' className='todo-input' onChange={handleChange} ref={inputRef}/>\r\n            <button className='todo-button'>Add</button> </>\r\n            )\r\n        }\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState ({\r\n        id:null, value: ''\r\n    });\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id:null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate}/>;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}> \r\n        \r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}> {todo.text}</div>\r\n            <div className='icons'> <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon' /> \r\n            <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className='edit-icon' /> </div>\r\n        \r\n        </div>\r\n    )\r\n    );\r\n}\r\n\r\nexport default Todo\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n        \r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item))\r\n        );\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id != id)\r\n        setTodos(removeArr)\r\n    }\r\n\r\n\r\n\r\n    const completeTodo = id => {\r\n        let updatedTools = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete;\r\n            }\r\n            return todo;\r\n        }\r\n            );\r\n            setTodos(updatedTools);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n          <h1>Tasks</h1>\r\n          <TodoForm onSubmit={addTodo} /> \r\n          <Todo \r\n              todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}\r\n          /> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport React from 'react';\nimport TodoList from './components/TodoList';\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}